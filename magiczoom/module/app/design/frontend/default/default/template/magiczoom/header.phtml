<?php

    $magic360ClassName = Mage::registry('magic360ClassName');


    if($magic360ClassName) {
        return;
    }


    $magicToolboxHelper = Mage::helper('magiczoom/settings');
    if((!method_exists($magicToolboxHelper, 'isModuleOutputEnabled') && !Mage::getStoreConfigFlag('advanced/modules_disable_output/MagicToolbox_MagicZoom')) || $magicToolboxHelper->isModuleOutputEnabled()) {
        //$moduleName = $this->getRequest()->getModuleName();       //catalog   review  checkout    catalog     cms     catalogsearch   catalogsearch
        //$this->getRequest()->getRouteName()                       //catalog   review  checkout    catalog     cms     catalogsearch   catalogsearch
        $controllerName = $this->getRequest()->getControllerName(); //product   product cart        category    index   result          advanced
        $actionName = $this->getRequest()->getActionName();         //view      list    configure   view        index   index           result

        //$page = ($controllerName == 'product')?'product':'category';
        //$productPage = ($controllerName == 'product') && ($actionName == 'view');
        $productPage = false;
        if($controllerName == 'product' || $controllerName == 'cart') {
            $page = 'product';
            if($actionName == 'view') {
                $productPage = true;
            }
        } else {
            $page = 'category';
        }

        $tool = $magicToolboxHelper->loadTool($page);
        if(!$tool->params->checkValue('use-effect-on-'.$page.'-page', 'No')) {

            if($productPage && $tool->params->checkValue('selector-position', array('left', 'right'))) {
?>
<style type="text/css">
    div.MagicToolboxWrapper {float: left; width: <?php echo $tool->params->getValue('thumb-max-width'); ?>px; }
    .product-view .product-img-box .more-views li { clear: both; }
    div.MagicToolboxSelectorsContainer { float: left; }
</style>
<?php
            }


            echo $tool->headers(str_replace('/magiczoom.js', '', $this->getSkinUrl('js/magiczoom.js')), str_replace('/magiczoom.css', '', $this->getSkinUrl('css/magiczoom.css')));
            if($tool->type == 'standard' && $tool->params->checkValue('magicscroll', 'yes')) {
                $scroll = $magicToolboxHelper->loadScroll($page);
                echo $scroll->headers(str_replace('/magiczoom.js', '', $this->getSkinUrl('js/magiczoom.js')), str_replace('/magiczoom.css', '', $this->getSkinUrl('css/magiczoom.css')));
            }


            if($productPage) {
?>
<script type="text/javascript" src="<?php echo $this->getSkinUrl('js/magictoolbox_utils.js'); ?>"></script>
<script type="text/javascript">
    var magicToolboxOptionTitles = ['<?php echo strtolower(trim(preg_replace('/\s*,\s*/is', '\',\'', $tool->params->getValue('option-associated-with-images')))); ?>'];

    var MagicToolbox_click = '<?php echo strtolower($tool->params->getValue('selectors-change')); ?>';




    $mjs(window).je1('load', function() {
        MagicToolboxPrepareOptions();
    });


</script>
<?php
            }

        } else {
            //fix js error in configurable.phtml
?>
<script type="text/javascript">
    function MagicToolboxChangeOptionConfigurable(element, optionTitle) {
        return;
    }
</script>
<?php
        }
    }

?>
